import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { TimestreamWriteServiceException as __BaseException } from "./TimestreamWriteServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export declare const BatchLoadDataFormat: {
  readonly CSV: "CSV";
};
export type BatchLoadDataFormat =
  (typeof BatchLoadDataFormat)[keyof typeof BatchLoadDataFormat];
export interface BatchLoadProgressReport {
  RecordsProcessed?: number;
  RecordsIngested?: number;
  ParseFailures?: number;
  RecordIngestionFailures?: number;
  FileFailures?: number;
  BytesMetered?: number;
}
export declare const BatchLoadStatus: {
  readonly CREATED: "CREATED";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly PENDING_RESUME: "PENDING_RESUME";
  readonly PROGRESS_STOPPED: "PROGRESS_STOPPED";
  readonly SUCCEEDED: "SUCCEEDED";
};
export type BatchLoadStatus =
  (typeof BatchLoadStatus)[keyof typeof BatchLoadStatus];
export interface BatchLoadTask {
  TaskId?: string;
  TaskStatus?: BatchLoadStatus | string;
  DatabaseName?: string;
  TableName?: string;
  CreationTime?: Date;
  LastUpdatedTime?: Date;
  ResumableUntil?: Date;
}
export interface DimensionMapping {
  SourceColumn?: string;
  DestinationColumn?: string;
}
export declare const MeasureValueType: {
  readonly BIGINT: "BIGINT";
  readonly BOOLEAN: "BOOLEAN";
  readonly DOUBLE: "DOUBLE";
  readonly MULTI: "MULTI";
  readonly TIMESTAMP: "TIMESTAMP";
  readonly VARCHAR: "VARCHAR";
};
export type MeasureValueType =
  (typeof MeasureValueType)[keyof typeof MeasureValueType];
export declare const ScalarMeasureValueType: {
  readonly BIGINT: "BIGINT";
  readonly BOOLEAN: "BOOLEAN";
  readonly DOUBLE: "DOUBLE";
  readonly TIMESTAMP: "TIMESTAMP";
  readonly VARCHAR: "VARCHAR";
};
export type ScalarMeasureValueType =
  (typeof ScalarMeasureValueType)[keyof typeof ScalarMeasureValueType];
export interface MultiMeasureAttributeMapping {
  SourceColumn: string | undefined;
  TargetMultiMeasureAttributeName?: string;
  MeasureValueType?: ScalarMeasureValueType | string;
}
export interface MixedMeasureMapping {
  MeasureName?: string;
  SourceColumn?: string;
  TargetMeasureName?: string;
  MeasureValueType: MeasureValueType | string | undefined;
  MultiMeasureAttributeMappings?: MultiMeasureAttributeMapping[];
}
export interface MultiMeasureMappings {
  TargetMultiMeasureName?: string;
  MultiMeasureAttributeMappings: MultiMeasureAttributeMapping[] | undefined;
}
export declare const TimeUnit: {
  readonly MICROSECONDS: "MICROSECONDS";
  readonly MILLISECONDS: "MILLISECONDS";
  readonly NANOSECONDS: "NANOSECONDS";
  readonly SECONDS: "SECONDS";
};
export type TimeUnit = (typeof TimeUnit)[keyof typeof TimeUnit];
export interface DataModel {
  TimeColumn?: string;
  TimeUnit?: TimeUnit | string;
  DimensionMappings: DimensionMapping[] | undefined;
  MultiMeasureMappings?: MultiMeasureMappings;
  MixedMeasureMappings?: MixedMeasureMapping[];
  MeasureNameColumn?: string;
}
export interface DataModelS3Configuration {
  BucketName?: string;
  ObjectKey?: string;
}
export interface DataModelConfiguration {
  DataModel?: DataModel;
  DataModelS3Configuration?: DataModelS3Configuration;
}
export interface CsvConfiguration {
  ColumnSeparator?: string;
  EscapeChar?: string;
  QuoteChar?: string;
  NullValue?: string;
  TrimWhiteSpace?: boolean;
}
export interface DataSourceS3Configuration {
  BucketName: string | undefined;
  ObjectKeyPrefix?: string;
}
export interface DataSourceConfiguration {
  DataSourceS3Configuration: DataSourceS3Configuration | undefined;
  CsvConfiguration?: CsvConfiguration;
  DataFormat: BatchLoadDataFormat | string | undefined;
}
export declare const S3EncryptionOption: {
  readonly SSE_KMS: "SSE_KMS";
  readonly SSE_S3: "SSE_S3";
};
export type S3EncryptionOption =
  (typeof S3EncryptionOption)[keyof typeof S3EncryptionOption];
export interface ReportS3Configuration {
  BucketName: string | undefined;
  ObjectKeyPrefix?: string;
  EncryptionOption?: S3EncryptionOption | string;
  KmsKeyId?: string;
}
export interface ReportConfiguration {
  ReportS3Configuration?: ReportS3Configuration;
}
export interface BatchLoadTaskDescription {
  TaskId?: string;
  ErrorMessage?: string;
  DataSourceConfiguration?: DataSourceConfiguration;
  ProgressReport?: BatchLoadProgressReport;
  ReportConfiguration?: ReportConfiguration;
  DataModelConfiguration?: DataModelConfiguration;
  TargetDatabaseName?: string;
  TargetTableName?: string;
  TaskStatus?: BatchLoadStatus | string;
  RecordVersion?: number;
  CreationTime?: Date;
  LastUpdatedTime?: Date;
  ResumableUntil?: Date;
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface CreateBatchLoadTaskRequest {
  ClientToken?: string;
  DataModelConfiguration?: DataModelConfiguration;
  DataSourceConfiguration: DataSourceConfiguration | undefined;
  ReportConfiguration: ReportConfiguration | undefined;
  TargetDatabaseName: string | undefined;
  TargetTableName: string | undefined;
  RecordVersion?: number;
}
export interface CreateBatchLoadTaskResponse {
  TaskId: string | undefined;
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class InvalidEndpointException extends __BaseException {
  readonly name: "InvalidEndpointException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidEndpointException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface CreateDatabaseRequest {
  DatabaseName: string | undefined;
  KmsKeyId?: string;
  Tags?: Tag[];
}
export interface Database {
  Arn?: string;
  DatabaseName?: string;
  TableCount?: number;
  KmsKeyId?: string;
  CreationTime?: Date;
  LastUpdatedTime?: Date;
}
export interface CreateDatabaseResponse {
  Database?: Database;
}
export interface S3Configuration {
  BucketName?: string;
  ObjectKeyPrefix?: string;
  EncryptionOption?: S3EncryptionOption | string;
  KmsKeyId?: string;
}
export interface MagneticStoreRejectedDataLocation {
  S3Configuration?: S3Configuration;
}
export interface MagneticStoreWriteProperties {
  EnableMagneticStoreWrites: boolean | undefined;
  MagneticStoreRejectedDataLocation?: MagneticStoreRejectedDataLocation;
}
export interface RetentionProperties {
  MemoryStoreRetentionPeriodInHours: number | undefined;
  MagneticStoreRetentionPeriodInDays: number | undefined;
}
export declare const PartitionKeyEnforcementLevel: {
  readonly OPTIONAL: "OPTIONAL";
  readonly REQUIRED: "REQUIRED";
};
export type PartitionKeyEnforcementLevel =
  (typeof PartitionKeyEnforcementLevel)[keyof typeof PartitionKeyEnforcementLevel];
export declare const PartitionKeyType: {
  readonly DIMENSION: "DIMENSION";
  readonly MEASURE: "MEASURE";
};
export type PartitionKeyType =
  (typeof PartitionKeyType)[keyof typeof PartitionKeyType];
export interface PartitionKey {
  Type: PartitionKeyType | string | undefined;
  Name?: string;
  EnforcementInRecord?: PartitionKeyEnforcementLevel | string;
}
export interface Schema {
  CompositePartitionKey?: PartitionKey[];
}
export interface CreateTableRequest {
  DatabaseName: string | undefined;
  TableName: string | undefined;
  RetentionProperties?: RetentionProperties;
  Tags?: Tag[];
  MagneticStoreWriteProperties?: MagneticStoreWriteProperties;
  Schema?: Schema;
}
export declare const TableStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly DELETING: "DELETING";
  readonly RESTORING: "RESTORING";
};
export type TableStatus = (typeof TableStatus)[keyof typeof TableStatus];
export interface Table {
  Arn?: string;
  TableName?: string;
  DatabaseName?: string;
  TableStatus?: TableStatus | string;
  RetentionProperties?: RetentionProperties;
  CreationTime?: Date;
  LastUpdatedTime?: Date;
  MagneticStoreWriteProperties?: MagneticStoreWriteProperties;
  Schema?: Schema;
}
export interface CreateTableResponse {
  Table?: Table;
}
export interface DeleteDatabaseRequest {
  DatabaseName: string | undefined;
}
export interface DeleteTableRequest {
  DatabaseName: string | undefined;
  TableName: string | undefined;
}
export interface DescribeBatchLoadTaskRequest {
  TaskId: string | undefined;
}
export interface DescribeBatchLoadTaskResponse {
  BatchLoadTaskDescription: BatchLoadTaskDescription | undefined;
}
export interface DescribeDatabaseRequest {
  DatabaseName: string | undefined;
}
export interface DescribeDatabaseResponse {
  Database?: Database;
}
export interface DescribeEndpointsRequest {}
export interface Endpoint {
  Address: string | undefined;
  CachePeriodInMinutes: number | undefined;
}
export interface DescribeEndpointsResponse {
  Endpoints: Endpoint[] | undefined;
}
export interface DescribeTableRequest {
  DatabaseName: string | undefined;
  TableName: string | undefined;
}
export interface DescribeTableResponse {
  Table?: Table;
}
export declare const DimensionValueType: {
  readonly VARCHAR: "VARCHAR";
};
export type DimensionValueType =
  (typeof DimensionValueType)[keyof typeof DimensionValueType];
export interface Dimension {
  Name: string | undefined;
  Value: string | undefined;
  DimensionValueType?: DimensionValueType | string;
}
export interface ListBatchLoadTasksRequest {
  NextToken?: string;
  MaxResults?: number;
  TaskStatus?: BatchLoadStatus | string;
}
export interface ListBatchLoadTasksResponse {
  NextToken?: string;
  BatchLoadTasks?: BatchLoadTask[];
}
export interface ListDatabasesRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface ListDatabasesResponse {
  Databases?: Database[];
  NextToken?: string;
}
export interface ListTablesRequest {
  DatabaseName?: string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListTablesResponse {
  Tables?: Table[];
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceARN: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Tag[];
}
export interface MeasureValue {
  Name: string | undefined;
  Value: string | undefined;
  Type: MeasureValueType | string | undefined;
}
export interface _Record {
  Dimensions?: Dimension[];
  MeasureName?: string;
  MeasureValue?: string;
  MeasureValueType?: MeasureValueType | string;
  Time?: string;
  TimeUnit?: TimeUnit | string;
  Version?: number;
  MeasureValues?: MeasureValue[];
}
export interface RecordsIngested {
  Total?: number;
  MemoryStore?: number;
  MagneticStore?: number;
}
export interface RejectedRecord {
  RecordIndex?: number;
  Reason?: string;
  ExistingVersion?: number;
}
export declare class RejectedRecordsException extends __BaseException {
  readonly name: "RejectedRecordsException";
  readonly $fault: "client";
  Message?: string;
  RejectedRecords?: RejectedRecord[];
  constructor(
    opts: __ExceptionOptionType<RejectedRecordsException, __BaseException>
  );
}
export interface ResumeBatchLoadTaskRequest {
  TaskId: string | undefined;
}
export interface ResumeBatchLoadTaskResponse {}
export interface TagResourceRequest {
  ResourceARN: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceARN: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateDatabaseRequest {
  DatabaseName: string | undefined;
  KmsKeyId: string | undefined;
}
export interface UpdateDatabaseResponse {
  Database?: Database;
}
export interface UpdateTableRequest {
  DatabaseName: string | undefined;
  TableName: string | undefined;
  RetentionProperties?: RetentionProperties;
  MagneticStoreWriteProperties?: MagneticStoreWriteProperties;
  Schema?: Schema;
}
export interface UpdateTableResponse {
  Table?: Table;
}
export interface WriteRecordsRequest {
  DatabaseName: string | undefined;
  TableName: string | undefined;
  CommonAttributes?: _Record;
  Records: _Record[] | undefined;
}
export interface WriteRecordsResponse {
  RecordsIngested?: RecordsIngested;
}
export declare const CreateBatchLoadTaskRequestFilterSensitiveLog: (
  obj: CreateBatchLoadTaskRequest
) => any;
